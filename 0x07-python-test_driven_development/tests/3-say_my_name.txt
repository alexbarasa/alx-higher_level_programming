The ``3-say_my_name`` module
============================

Using ``3-say_my_name`` module
-----------------------------

First we import ``say_my_name`` from ``3-say_my_name`` 
>>> say_my_name = __import__('3-say_my_name').say_my_name

# Running tests
# say my name with two names, last is a combination of two names
>>> say_my_name("Purity", "Masika Wakhulia")
My name is Purity Masika Wakhulia

# say my name, test
>>> say_my_name("Ambrose", "Wafukho")
My name is Ambrose Wafukho


# say my name by passing in only first name
>>> say_my_name("Efukho")
My name is Efukho 

# Error with integers for say my name
>>> say_my_name(1, "John")
Traceback (most recent call last):
TypeError: first_name must be a string

# Error with list of integers for my lastname
>>> say_my_name("Guido", [1, 2, 3,])
Traceback (most recent call last):
TypeError: last_name must be a string

# Error for none first name and last name
>>> say_my_name(None, None)
Traceback (most recent call last):
TypeError: first_name must be a string

# Error for None name
>>> say_my_name(None)
Traceback (most recent call last):
TypeError: first_name must be a string

# empty values
>>> say_my_name()
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
